name: Create Resource Group

on:
  push:
    branches:
      - main
      - feature/*
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  workdir: environment/dev

jobs:
  Infra-Build:
    name: Terraform Init, Validate, and Plan
    runs-on: self-hosted
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ${{ env.workdir }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ${{ env.workdir }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ env.workdir }}

      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.workdir }}

  Deployment-Approval:
    name:  Manual Approval Step
    needs: Infra-Build
    runs-on: ubuntu-latest
    environment:
      name: Deployment approval Needed  # GitHub pe 'approval' environment banao, add reviewers
    steps:
      - name: Wait for Manual Approval
        run: echo "Waiting for manual approval..."

  Infra-Deployment:
    name: Terraform Apply
    needs: Deployment-Approval
    runs-on: self-hosted
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5

      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ env.workdir }}

      - name: Terraform Apply
        run: terraform apply --auto-approve
        working-directory: ${{ env.workdir }}
